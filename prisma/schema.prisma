generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model StockAdjustment {
  id            Int      @id @default(autoincrement())
  productId     Int?
  quantity      Int
  previousStock Int
  newStock      Int
  reason        String
  notes         String?
  adjustedBy    String?
  createdAt     DateTime @default(now())
  product       Product? @relation(fields: [productId], references: [id])
}

model Product {
  id               Int               @id @default(autoincrement())
  sku              String            @unique
  name             String
  categoryId       Int
  stock            Int
  minStock         Int
  location         String
  value            Float
  status           Status            @default(IN_STOCK)
  lastUpdated      DateTime          @updatedAt
  image            String?
  orderItems       OrderItem[]
  category         Category          @relation(fields: [categoryId], references: [id])
  stockAdjustments StockAdjustment[]
}

model Order {
  id             Int         @id @default(autoincrement())
  orderId        String      @unique
  customer       String
  email          String
  phone          String?
  billingAddress String?
  subtotal       Float
  total          Float
  status         String
  priority       String
  dueDate        String
  assignedTo     String
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
  items          OrderItem[]
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  sku       String
  name      String
  price     Float
  quantity  Int
  orderId   Int
  productId Int?
  order     Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product   Product? @relation(fields: [productId], references: [id])
}

model User {
  id    Int    @id @default(autoincrement())
  name  String
  email String @unique
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]
}

model Report {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  category    String
  format      String
  filePath    String
  size        Int
  timeRange   String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Profile {
  id         Int      @id @default(autoincrement())
  firstName  String
  lastName   String
  email      String   @unique
  phone      String?
  location   String?
  bio        String?
  department String
  position   String
  employeeId String   @unique
  joinDate   DateTime
  avatar     String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model People {
  id          Int       @id @default(autoincrement())
  name        String
  email       String    @unique
  phone       String?
  department  String?
  position    String?
  status      String    @default("Active")
  hireDate    DateTime?
  performance String?
  type        String
  company     String?
  address     String?
  notes       String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

enum Status {
  IN_STOCK
  LOW_STOCK
  OUT_OF_STOCK
}
