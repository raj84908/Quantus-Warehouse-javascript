// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}


//Stock Adjustement
model StockAdjustment {
  id            Int       @id @default(autoincrement())
  productId     Int?
  product       Product?  @relation(fields: [productId], references: [id], onDelete: SetNull)
  quantity      Int
  previousStock Int
  newStock      Int
  reason        String
  notes         String?
  adjustedBy    String?
  createdAt     DateTime  @default(now())
}

//Storing Inventory Items
model Product {
  id           Int      @id @default(autoincrement())
  sku          String   @unique
  name         String
  categoryId   Int      // Foreign key field
  category     Category @relation(fields: [categoryId], references: [id]) // Relation field
  stock        Int
  minStock     Int
  location     String
  value        Float
  status       Status   @default(IN_STOCK)
  lastUpdated  DateTime @updatedAt
  image        String?
  stockAdjustments StockAdjustment[]
}
//Orders 

model Order {
  id            Int           @id @default(autoincrement())
  orderId       String        @unique
  customer      String
  email         String
  phone         String?
  billingAddress String?
  subtotal      Float
  total         Float
  status        String        // "Processing" or "Completed"
  priority      String        // "High", "Medium", "Low"
  dueDate       String
  assignedTo    String
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  items         OrderItem[]
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  sku       String
  name      String
  price     Float
  quantity  Int
  order     Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId   Int
  productId Int?     // Optional reference to the actual product
}



model User {
  id Int @id @default(autoincrement())
  name String
  email String @unique
}

enum Status {
  IN_STOCK
  LOW_STOCK
  OUT_OF_STOCK
}
model Category {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  products  Product[]
}
